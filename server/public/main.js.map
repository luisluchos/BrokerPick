{"version":3,"sources":["./src/app/components/login-button/login-button.component.ts","./src/app/components/trades/trades.component.ts","./src/app/components/trades/trades.component.html","./src/environments/environment.ts","./src/app/services/api.service.ts","./src/app/services/trades.resolver.ts","./src/app/components/views/home/home.component.ts","./src/app/components/views/home/home.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/logout-button/logout-button.component.ts","./src/app/components/views/page-not-found/page-not-found.component.ts","./src/app/components/views/page-not-found/page-not-found.component.html","./src/app/app-routing.module.ts","./src/app/views/nav-bar/nav-bar.component.html","./src/app/views/nav-bar/nav-bar.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\n\n@Component({\n  selector: 'app-login-button',\n  template: '<button (click)=\"auth.loginWithRedirect()\">Log in</button>',\n})\nexport class LoginButtonComponent implements OnInit {\n\n    constructor(public auth: AuthService) {}\n    ngOnInit(): void {\n    }\n  }\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-trades',\n  templateUrl: './trades.component.html',\n  styleUrls: ['./trades.component.scss']\n})\nexport class TradesComponent implements OnInit {\n\n  trades:any;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      console.log(\"data\",data);\n      ;\n    });\n    \n    \n  }\n\n}\n","<p>trades works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  BASE_URI = 'http://localhost:3000/api';\r\n  private url= \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&\"\r\n\r\n  constructor(private http : HttpClient) { }\r\n\r\n  /* Para hacer poder mostrar los datos en el HTML del componente, en lugar de hacer el subscribe en el servicio, \r\n  tenemos que devolver un Observable de la llamada http */\r\n  /* Los métodos observables son funciones declarativas, se definen para publicar valores pero no se ejecutan \r\n  hasta que un consumidor se suscribe a ellas, desde ese momento recibe notificaciones hasta que finalice \r\n  la función observable o finalice la suscripción de forma programada. */\r\n\r\n  getAllCoins():Observable<object>{\r\n    return this.http.get(`${this.url}`)\r\n  }\r\n\r\n  getAllTrades() {\r\n    return this.http.get(`${this.BASE_URI}/trades`);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport {\n  Router, Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TradesResolver implements Resolve<boolean> {\n\n  constructor(\n    private apiService: ApiService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n    return this.apiService.getAllTrades();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Observable,interval, timer, Subscription, Subject,  } from 'rxjs';\r\nimport { concatMap, map, tap, switchMap, mergeMap } from 'rxjs/operators';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  coins:any = []\r\n\r\n  constructor(private apiServce: ApiService) { \r\n    \r\n   \r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.coins = timer(1, 60000)\r\n    .pipe(\r\n        mergeMap(() => this.apiServce.getAllCoins())\r\n    );\r\n\r\n    /* interval works, but it would start our polling after 60000 milliseconds. We want to begin polling right away. \r\n    timer is another function that allows us to start the interval whenever we want, including right now */\r\n\r\n    /* switchMap, which turns an input Observable into another Observable. \r\n    In our case, we will be turning every number emitted by timer into an HTTP request to our backend */\r\n    \r\n  }\r\n\r\n}\r\n","<p>home</p>\r\n\r\n<table class=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">#</th>\r\n        <th scope=\"col\">Current Price</th>\r\n        <th scope=\"col\">Price change 24h</th>\r\n        \r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor= \"let coin of coins|async\">\r\n        <th scope = \"row\">{{coin.id}}</th>\r\n        <td>{{coin.current_price}}</td>\r\n        <td [style.color]=\"coin.price_change_percentage_24h >0 ? 'green': 'red'\">{{coin.price_change_percentage_24h / 100 | percent:'.2'}}</td>\r\n        \r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<app-nav-bar></app-nav-bar>\r\n\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { PageNotFoundComponent } from './components/views/page-not-found/page-not-found.component';\r\nimport { HomeComponent } from './components/views/home/home.component';\r\n\r\n// Import the module from the SDK\r\nimport { AuthModule } from '@auth0/auth0-angular';\nimport { NavBarComponent } from './views/nav-bar/nav-bar.component';\nimport { LoginButtonComponent } from './components/login-button/login-button.component';\nimport { LogoutButtonComponent } from './components/logout-button/logout-button.component';\nimport { TradesComponent } from './components/trades/trades.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PageNotFoundComponent,\r\n    HomeComponent,\r\n    NavBarComponent,\r\n    LoginButtonComponent,\r\n    LogoutButtonComponent,\r\n    TradesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    AuthModule.forRoot({\r\n      domain: 'luisluchos.eu.auth0.com',\r\n      clientId: 'EHFVk3EpOoS3bFaEhoL2jMS571czgDI3'\r\n    }),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { AuthService } from '@auth0/auth0-angular';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-logout-button',\n  template: `\n    <ng-container *ngIf=\"auth.isAuthenticated$ | async; else loggedOut\">\n      <button class=\"btn btn-danger\" (click)=\"auth.logout({ returnTo: document.location.origin })\">\n        Log out\n      </button>\n    </ng-container>\n\n    <ng-template #loggedOut>\n      <button class=\"btn btn-primary\" (click)=\"auth.loginWithRedirect()\">Log in</button>\n    </ng-template>\n  `,\n  styles: [],\n})\nexport class LogoutButtonComponent implements OnInit {\n\n  constructor(@Inject(DOCUMENT) public document: Document, public auth: AuthService) {}\n\n  ngOnInit(): void {\n  }\n\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img width=\"100%\" src=\"https://www.initcoms.com/wp-content/uploads/2020/07/404-error-not-found-1.png\" />\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '@auth0/auth0-angular';\r\nimport { TradesComponent } from './components/trades/trades.component';\r\nimport { HomeComponent } from './components/views/home/home.component';\r\nimport { PageNotFoundComponent } from './components/views/page-not-found/page-not-found.component';\r\nimport { TradesResolver } from './services/trades.resolver';\r\n\r\nconst routes: Routes = [\r\n  {path:'', pathMatch: 'full', redirectTo: '/home'},\r\n  {path: 'home', pathMatch: 'full', component: HomeComponent},\r\n  {path: 'trades', pathMatch: 'full', component: TradesComponent,canActivate: [AuthGuard],resolve: {trades: TradesResolver}},\r\n  {path:'404', component: PageNotFoundComponent},\r\n  {path:'**', redirectTo:'/404', pathMatch:'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\">Auth App</a>\n      <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" aria-current=\"page\" routerLink=\"home\">Home</a>\n          </li>\n          <li *ngIf=\"login\" class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" routerLink=\"protected\">Protected</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" [routerLink]=\"['/trades']\">Trades</a>\n          </li>\n        </ul>\n        <span class=\"navbar-text\">\n          <app-logout-button></app-logout-button>\n        </span>\n      </div>\n    </div>\n  </nav>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  login:boolean= false\n\n  constructor(public auth: AuthService) {\n    auth.isAuthenticated$.subscribe(data => this.login = data) //hide or show when we are login\n    console.log(\"login\",this.login);\n    \n    \n\n  \n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}