{"version":3,"sources":["./src/app/components/login-button/login-button.component.ts","./src/app/components/trades/trades.component.ts","./src/app/components/trades/trades.component.html","./src/environments/environment.ts","./src/app/services/api.service.ts","./src/app/services/trades.resolver.ts","./src/app/components/views/home/home.component.ts","./src/app/components/views/home/home.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/user-wallet-snippet/user-wallet-snippet.component.ts","./src/app/components/user-wallet-snippet/user-wallet-snippet.component.html","./src/app/components/logout-button/logout-button.component.ts","./src/app/components/purchase-snippet/purchase-snippet.component.ts","./src/app/components/purchase-snippet/purchase-snippet.component.html","./src/app/components/views/page-not-found/page-not-found.component.ts","./src/app/components/views/page-not-found/page-not-found.component.html","./src/app/components/user-wallet/user-wallet.component.html","./src/app/components/user-wallet/user-wallet.component.ts","./src/app/app-routing.module.ts","./src/app/views/nav-bar/nav-bar.component.html","./src/app/views/nav-bar/nav-bar.component.ts","./src/app/components/purchase/purchase.component.ts","./src/app/components/purchase/purchase.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\n\n@Component({\n  selector: 'app-login-button',\n  template: '<button (click)=\"auth.loginWithRedirect()\">Log in</button>',\n})\nexport class LoginButtonComponent implements OnInit {\n\n    constructor(public auth: AuthService) {}\n    ngOnInit(): void {\n    }\n  }\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { ApiService } from 'src/app/services/api.service';\nimport { map } from 'rxjs/operators';\n\ntype Wallet= {\n  email: string,\n  coins: Array<{}>,\n \n};\n\n@Component({\n  selector: 'app-trades',\n  templateUrl: './trades.component.html',\n  styleUrls: ['./trades.component.scss']\n})\nexport class TradesComponent implements OnInit {\n\n  //como evitar poner any, ¿debería ir como observable?\nuserWallet:any =[]\nuserData:any;\n\n  constructor(public auth: AuthService, public apiService : ApiService) { \n    this.auth.user$.subscribe((data:any) =>{\n      this.userData= data.email\n      console.log(\"userData:\", this.userData);\n      \n    })\n  }\n\n  ngOnInit(): void {\n\n  this.apiService.getWalletByUser(this.userData).subscribe((data:any)=>{\n    this.userWallet=data.wallets[0]\n  \n   console.log(\"coins\", data.wallets[0].coins); \n   console.log(data.wallets[0]);\n      \n  });\n\n  /**\n   * Queremos sacar la suma de la cantidad de coins que tiene un user\n   */\n  this.apiService.getWalletByUser(this.userData)\n  .pipe(map(((data:any) => data.wallets[0].coins.reduce((a:any, b:any) => a + b.cantidad, 0))))\n  .subscribe((data:any)=>console.log(\"total Coins\",data)\n  );\n  \n\n}\n}\n\n// ejemplo edit ppushh compoent\n/* addPost() {\n  if(this.post.title && this.post.description){\n      if(this.post._id){\n        this.addPostService.updatePost(this.post).subscribe(res =>{\n          this.closeBtn.nativeElement.click();\n          this.commonService.notifyPostAddition();\n        });\n      } else {\n        this.addPostService.addPost(this.post).subscribe(res =>{\n          this.closeBtn.nativeElement.click();\n          this.commonService.notifyPostAddition();\n        });\n      }\n  } else {\n      alert('Title and Description required');\n  }\n} */","<ul *ngIf=\"auth.user$ | async as user\">\n    <li>{{ user.name }}</li>\n    <li>{{ user.email }}</li>\n    <li>{{user |json }}</li>\n  </ul>\n  <span>{{userWallet.email}}</span>\n  <span>{{userWallet.coins}}</span>\n  \n  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  BASE_URI = 'http://localhost:3000/api';\r\n  private url= \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&\"\r\n  private url2= \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin\"\r\n  private currency =\"&vs_currencies=usd\"\r\n\r\n  constructor(private http : HttpClient) { }\r\n\r\n  /* Para hacer poder mostrar los datos en el HTML del componente, en lugar de hacer el subscribe en el servicio, \r\n  tenemos que devolver un Observable de la llamada http */\r\n  /* Los métodos observables son funciones declarativas, se definen para publicar valores pero no se ejecutan \r\n  hasta que un consumidor se suscribe a ellas, desde ese momento recibe notificaciones hasta que finalice \r\n  la función observable o finalice la suscripción de forma programada. */\r\n\r\n  getAllCoins():Observable<object>{\r\n    return this.http.get(`${this.url}`)\r\n  };\r\n\r\n  getPriceCoin(coin:any):Observable<object>{\r\n    return this.http.get(\"https://api.coingecko.com/api/v3/simple/price?ids=\"+coin+\"&vs_currencies=usd\")\r\n  }\r\n;\r\n  getAllWallets() {\r\n    return this.http.get(`${this.BASE_URI}/wallets`);\r\n  };\r\n\r\n  getWalletByUser(user:string): Observable<any> {\r\n    let params = new HttpParams()\r\n      .set('user', user)\r\n      return this.http.get(`${this.BASE_URI}/wallets`,{params:params});\r\n  };\r\n\r\n  addWallet(payload:any): Observable<any> {\r\n    \r\n    return this.http.post(`${this.BASE_URI}/wallets`, payload);\r\n  };\r\n\r\n  sellCoin(payload:any): Observable<any> {\r\n\r\n    return this.http.post(`${this.BASE_URI}/wallets/sellCoin`, payload);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport {\n  Router, Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TradesResolver implements Resolve<boolean> {\n\n  constructor(\n    private apiService: ApiService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n    return this.apiService.getAllWallets();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { Observable,interval, timer, Subscription, Subject,  } from 'rxjs';\r\nimport { concatMap, map, tap, switchMap, mergeMap } from 'rxjs/operators';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  coins:any = []\r\n\r\n  constructor(private apiServce: ApiService) { \r\n    \r\n   \r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.coins = timer(1, 60000)\r\n    .pipe(\r\n        mergeMap(() => this.apiServce.getAllCoins())\r\n    );\r\n\r\n    /* interval works, but it would start our polling after 60000 milliseconds. We want to begin polling right away. \r\n    timer is another function that allows us to start the interval whenever we want, including right now */\r\n\r\n    /* switchMap, which turns an input Observable into another Observable. \r\n    In our case, we will be turning every number emitted by timer into an HTTP request to our backend */\r\n    \r\n  }\r\n\r\n}\r\n","<p>home</p>\r\n\r\n<table class=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">#</th>\r\n        <th scope=\"col\">Current Price</th>\r\n        <th scope=\"col\">Price change 24h</th>\r\n        \r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor= \"let coin of coins|async\">\r\n        <th scope = \"row\">{{coin.id}}</th>\r\n        <td>{{coin.current_price}}</td>\r\n        <td [style.color]=\"coin.price_change_percentage_24h >0 ? 'green': 'red'\">{{coin.price_change_percentage_24h / 100 | percent:'.2'}}</td>\r\n        \r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<app-nav-bar></app-nav-bar>\r\n\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { PageNotFoundComponent } from './components/views/page-not-found/page-not-found.component';\r\nimport { HomeComponent } from './components/views/home/home.component';\r\n\r\n// Import the module from the SDK\r\nimport { AuthModule } from '@auth0/auth0-angular';\r\nimport { NavBarComponent } from './views/nav-bar/nav-bar.component';\r\nimport { LoginButtonComponent } from './components/login-button/login-button.component';\r\nimport { LogoutButtonComponent } from './components/logout-button/logout-button.component';\r\nimport { TradesComponent } from './components/trades/trades.component';\r\nimport { PurchaseComponent } from './components/purchase/purchase.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PurchaseSnippetComponent } from './components/purchase-snippet/purchase-snippet.component';\nimport { UserWalletComponent } from './components/user-wallet/user-wallet.component';\nimport { UserWalletSnippetComponent } from './components/user-wallet-snippet/user-wallet-snippet.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PageNotFoundComponent,\r\n    HomeComponent,\r\n    NavBarComponent,\r\n    LoginButtonComponent,\r\n    LogoutButtonComponent,\r\n    TradesComponent,\r\n    PurchaseComponent,\r\n    PurchaseSnippetComponent,\r\n    UserWalletComponent,\r\n    UserWalletSnippetComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AuthModule.forRoot({\r\n      domain: 'luisluchos.eu.auth0.com',\r\n      clientId: 'EHFVk3EpOoS3bFaEhoL2jMS571czgDI3'\r\n    }),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-user-wallet-snippet',\n  templateUrl: './user-wallet-snippet.component.html',\n  styleUrls: ['./user-wallet-snippet.component.scss']\n})\nexport class UserWalletSnippetComponent implements OnInit {\n\n  @Input() coin: string =\"\";\n  @Input() purchase_price: number = 0;\n  @Input() market_price: number = 0;\n  @Input() id: string =\"\";\n\n\n  constructor(public apiService: ApiService, private router: Router) { }\n\n  ngOnInit(): void {\n\n  }\n\n  sell(event:any) {\n    \n    event.preventDefault()  \n    let payload = { id: this.id, market_price: this.market_price, sold: true}\n    console.log(\"sell\",payload);\n    this.apiService.sellCoin(payload).subscribe((data:any)=>{\n      console.log(\"data Sell\", data) \n    });\n    \n    \n    /* let payload = {coin : this.coin, purchase_price: this.price, quantity: 1 , email: this.userEmail, sold: false};\n    this.apiService.addWallet(payload).subscribe((data:any)=>{\n      console.log(\"data post\", data);\n      \n    });\n\n    console.log(\"coin\", this.coin);\n    console.log(\"prueba\", payload); */\n      \n  };\n}\n","<div class=\"d-flex justify-content-start\">\n    <p class=\"mr-4\">{{id}}</p>\n    <p class=\"mr-4\">{{coin}}</p>\n    <p class=\"mr-4\">{{purchase_price}}</p>\n    <p class=\"mr-4\">{{market_price}}</p>\n    <p class=\"mr-4\">{{((market_price-purchase_price) / purchase_price)*100 }}%</p>\n    \n   \n    <button (click)=\"sell($event)\">Sell</button>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { AuthService } from '@auth0/auth0-angular';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-logout-button',\n  template: `\n    <ng-container *ngIf=\"auth.isAuthenticated$ | async; else loggedOut\">\n      <button class=\"btn btn-danger\" (click)=\"auth.logout({ returnTo: document.location.origin })\">\n        Log out\n      </button>\n    </ng-container>\n\n    <ng-template #loggedOut>\n      <button class=\"btn btn-primary\" (click)=\"auth.loginWithRedirect()\">Log in</button>\n    </ng-template>\n  `,\n  styles: [],\n})\nexport class LogoutButtonComponent implements OnInit {\n\n  constructor(@Inject(DOCUMENT) public document: Document, public auth: AuthService) {}\n\n  ngOnInit(): void {\n  }\n\n}","import { Component, Input, OnInit } from '@angular/core';\n\nimport { AuthService } from '@auth0/auth0-angular';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-purchase-snippet',\n  templateUrl: './purchase-snippet.component.html',\n  styleUrls: ['./purchase-snippet.component.scss']\n})\nexport class PurchaseSnippetComponent implements OnInit {\n  @Input() coin: string=\"\";\n  @Input() price: number= 0;\n  \n\n\n  userEmail:any;\n\n  constructor(public auth: AuthService, public apiService: ApiService) {\n\n    this.auth.user$.subscribe((data:any) =>{\n      this.userEmail= data.email\n      console.log(\"userData:\", this.userEmail);   \n    });\n    \n   };\n\n  ngOnInit(): void {}\n\n  save(event:any) {\n    event.preventDefault()  \n    let payload = {coin : this.coin, purchase_price: this.price, quantity: 1 , email: this.userEmail, sold: false};\n    this.apiService.addWallet(payload).subscribe((data:any)=>{\n      console.log(\"data post\", data);\n      \n    });\n    console.log(\"prueba\", payload);\n      \n  };\n\n};\n\n\n /*  buildform() {\n    this.purchaseForm = this.fb.group({\n      price: [''],\n      coin: [''],\n      number: ['']\n    });\n    \n    this.purchaseForm.get('coin').setValue(this.coin)\n  }; */\n","<div class=\"d-flex justify-content-start\">\n    <p class=\"mr-4\">{{coin}}</p>\n    <P class=\"mr-4\">{{price}}</P>\n    <button (click)=\"save($event)\">Send to my wallet</button>\n</div>\n\n\n\n  \n\n\n<!-- OTRA OPCIÓN SRÍA HACERLO CON UN FORM -->\n  <!-- \n   <form [formGroup]=\"purchaseForm\" (ngSubmit)=\"save($event)\">\n\n        <label>\n              Coin \n            <input type=\"text\" formControlName=\"coin\" placeholder=\"{{coin.id}}\">\n          </label> \n        \n          <label>\n            Price:\n            <input type=\"text\" formControlName=\"price\" placeholder=\"{{coin.current_price}}\">\n          </label>\n      \n          <label>\n              number:\n              <input type=\"text\" formControlName=\"number\" value=\"1\">\n         </label>\n        \n            <div class=\"\">\n              <button class=\"btn btn-dark\" type=\"submit\" [disabled]=\"purchaseForm.invalid\">\n                  +\n              </button>\n          </div>\n    \n  </form> -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img width=\"100%\" src=\"https://www.initcoms.com/wp-content/uploads/2020/07/404-error-not-found-1.png\" />\n","<div class=\"d-flex justify-content-start font-weight-bold\">\n<p class=\"mr-4\">Name</p>\n<p class=\"mr-4\">Purchase Price</p>\n<p class=\"mr-4\">Market Price</p>\n<p class=\"mr-4\">%</p>\n</div>\n\n\n<div *ngFor= \"let coin of myWallet\">\n    <app-user-wallet-snippet [coin]=\"coin.coinName\" [purchase_price] = \"coin.purchase_price\" [market_price]=\"coin.market_price\" [id]=\"coin.id\"></app-user-wallet-snippet>\n </div>\n ","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { filter, map,find } from 'rxjs/operators';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-user-wallet',\n  templateUrl: './user-wallet.component.html',\n  styleUrls: ['./user-wallet.component.scss']\n})\nexport class UserWalletComponent implements OnInit {\n\n  userEmail:string=\"\"\n  myWallet:any=[]\n  \n\n  \n\n  constructor(private apiService: ApiService, public auth: AuthService) {\n    this.auth.user$.subscribe((data:any) =>{\n      this.userEmail= data.email\n      console.log(\"userData:\", this.userEmail); \n      \n    });\n   }\n\n  ngOnInit(): void {\n\n    /**\n     * SACAMOS DE LA DB EL USER QUE ESTÁ VIENDO SU PERFIL\n     * MAP DEL ARRAY DEL OBJETO, Y FILTRAMOS POR LA CONDICIÓN, EN ESTE CASO SERÁ SOLD:FALSE PARA OBTENER LAS OPERACIONES QUE SIGUEN SIN VENDERSE.\n     * FOREACH - FINALMENTE CON LA DATA OBTENIDA SACAMOS EN UNA VARIABLE EL NOMBRE DE LA COIN Y LA USAMOS PARA PASARLA COMO PARÁMETRO PARA EL APISERVICE\n     * NOS SUBSCRIBIMOS Y EN UNA VARIABLE GUARDAMOS EL PRICING ACTUAL.\n     * GUARDAMOS EN LA VARIABLE MEDIANTE PUSH EL OBJETO.\n     */\n   \n   this.apiService.getWalletByUser(this.userEmail)\n   .subscribe((data:any)=>{\n     data.wallets.map((values:any)=>{\n      let data = values.coins.filter((dataWallet:any)=> !dataWallet.sold)  \n      data.forEach((dataUser:any)=>{\n        let coinName = dataUser.coin\n        let purchase_price= dataUser.purchase_price\n        let id = dataUser._id\n        console.log(coinName);\n        this.apiService.getPriceCoin(coinName).subscribe((p:any)=>{\n          let pricing = p[coinName].usd\n\n          this.myWallet.push( {market_price: pricing , coinName, purchase_price, id  }); \n          console.log(\"myWalletobs\",this.myWallet);   \n       });\n        \n      })\n      \n     })\n     \n   })\n   /*  .pipe(\n      map((values:any) => {\n        return values.wallets.filter((dataWallet:any) => !dataWallet.coins.sold)})\n      ).subscribe((data:any)=>{ \n        data.forEach( (dataUser:any) =>{ \n          let coinName = dataUser.coin\n          let purchase_price = dataUser.purchase_price\n\n          this.apiService.getPriceCoin(coinName).subscribe((p:any)=>{\n            let pricing = p[coinName].usd\n\n            this.myWallet.push( {data: pricing , coinName, purchase_price  }); \n            console.log(\"myWalletobs\",this.myWallet);   \n         });\n     });    \n   }); */\n\n\n  }\n\n\n\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '@auth0/auth0-angular';\r\nimport { PurchaseComponent } from './components/purchase/purchase.component';\r\nimport { TradesComponent } from './components/trades/trades.component';\r\nimport { UserWalletComponent } from './components/user-wallet/user-wallet.component';\r\nimport { HomeComponent } from './components/views/home/home.component';\r\nimport { PageNotFoundComponent } from './components/views/page-not-found/page-not-found.component';\r\nimport { TradesResolver } from './services/trades.resolver';\r\n\r\nconst routes: Routes = [\r\n  {path:'', pathMatch: 'full', redirectTo: '/home'},\r\n  {path: 'home', pathMatch: 'full', component: HomeComponent},\r\n  {path: 'purchase', pathMatch: 'full', component: PurchaseComponent,canActivate: [AuthGuard],resolve: {trades: TradesResolver}},\r\n  {path: 'userwallet', pathMatch: 'full', component: UserWalletComponent,canActivate: [AuthGuard]},\r\n  {path:'404', component: PageNotFoundComponent},\r\n  {path:'**', redirectTo:'/404', pathMatch:'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\">Auth App</a>\n      <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" aria-current=\"page\" routerLink=\"home\">Home</a>\n          </li>\n          <li *ngIf=\"login\" class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" routerLink=\"protected\">Protected</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" [routerLink]=\"['/purchase']\">Purchase</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" [routerLink]=\"['/userwallet']\">My Wallet</a>\n          </li>\n        </ul>\n        <span class=\"navbar-text\">\n          <app-logout-button></app-logout-button>\n        </span>\n      </div>\n    </div>\n  </nav>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  login:boolean= false\n\n  constructor(public auth: AuthService) {\n    auth.isAuthenticated$.subscribe(data => this.login = data) //hide or show when we are login\n    console.log(\"login\",this.login);\n    \n    \n\n  \n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { timer } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators'\n\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-purchase',\n  templateUrl: './purchase.component.html',\n  styleUrls: ['./purchase.component.scss']\n})\nexport class PurchaseComponent implements OnInit {\n\n  purchaseForm:any;\n\n  buildform() {\n    this.purchaseForm = this.fb.group({\n      price: [''],\n      coin: [''],\n      number: ['']\n    });\n    \n    //this.purchaseForm.get('coin').setValue(this.coins.id)\n  }\n  \n  coins:any = []\n  moneda:any =[]\n\n  constructor(private apiServce: ApiService,private fb: FormBuilder) { \n    this.buildform();\n   \n  }\n\n  ngOnInit(): void {\n\n    this.coins = timer(1, 60000)\n    .pipe(\n        mergeMap(() => this.apiServce.getAllCoins())      \n    );\n\n\n    /* interval works, but it would start our polling after 60000 milliseconds. We want to begin polling right away. \n    timer is another function that allows us to start the interval whenever we want, including right now */\n\n    /* switchMap, which turns an input Observable into another Observable. \n    In our case, we will be turning every number emitted by timer into an HTTP request to our backend */\n    \n  }\n\n  save(event:any) {\n    event.preventDefault()\n    let purchase = this.purchaseForm.value\n    console.log(\"purchase \",purchase);    \n  };\n\n\n}\n","<p>purchase works!</p>\n\n<div *ngFor= \"let coin of coins|async\">\n    <app-purchase-snippet [coin]= \"coin.id\" [price]= \"coin.current_price\" ></app-purchase-snippet>\n\n</div>\n\n<!-- <p>home</p>\n\n<table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Current Price</th>\n        <th scope=\"col\">Price change 24h</th>\n        \n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor= \"let coin of coins|async\">\n        <th scope = \"row\">{{coin.id}}</th>\n        <td>{{coin.current_price}}</td>\n        <td [style.color]=\"coin.price_change_percentage_24h >0 ? 'green': 'red'\">{{coin.price_change_percentage_24h / 100 | percent:'.2'}}</td>\n        \n      </tr>\n    </tbody>\n  </table> -->\n\n  \n\n\n\n <!--  <form [formGroup]=\"purchaseForm\" (ngSubmit)=\"save($event)\">\n\n    <div *ngFor= \"let coin of coins|async\" class=\"row p-3\">\n\n       \n        <label>\n              Coin \n            <input type=\"text\" formControlName=\"coin\" placeholder=\"{{coin.id}}\">\n          </label> \n        \n          <label>\n            Price:\n            <input type=\"text\" formControlName=\"price\" placeholder=\"{{coin.current_price}}\">\n          </label>\n      \n          <label>\n              number:\n              <input type=\"text\" formControlName=\"number\" value=\"1\">\n         </label>\n        \n            <div class=\"\">\n              <button class=\"btn btn-dark\" type=\"submit\" [disabled]=\"purchaseForm.invalid\">\n                  +\n              </button>\n          </div>\n        \n    </div>\n  \n    \n  </form>\n\n  <p>\n    Form Status: {{ purchaseForm.status }} -->\n    \n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}